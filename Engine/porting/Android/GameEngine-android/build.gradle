buildscript {
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'
    }
}
apply plugin: 'android'

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation files('libs/gcm.jar')
}

android {
    compileSdkVersion 18
    buildToolsVersion "28.0.0"

    defaultConfig {
        targetSdkVersion 17
        ndk {
            moduleName "native"
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        release {
            if (file("proguard-project.txt").exists()) {
                runProguard true
                proguardFile getDefaultProguardFile('proguard-android.txt')
                proguardFile file('proguard-project.txt')
            }

            if (project.hasProperty('storeFile')) {
                signingConfig signingConfigs.release
            }
        }
    }
    task ndkBuild(type:Exec) {
        commandLine 'ndk-build', '-j'
    }

    task ndkClean(type:Exec) {
        commandLine 'ndk-build', 'clean'
    }

    task libsClean(type:Exec) {
        commandLine 'rm', '-rf', 'libs/armeabi', 'libs/armeabi-v7a', 'libs/x86', 'libs/mips'
    }

//    if(new File(projectDir, "jni").exists()){
//        tasks.withType(JavaCompile) {
//            compileTask -> compileTask.dependsOn ndkBuild
//        }
//
//        tasks.withType(com.android.build.gradle.tasks.PackageApplication) {
//            pkgTask -> pkgTask.jniDir new File(projectDir, 'libs')
//        }
//
//        clean.dependsOn 'ndkClean'
//        clean.dependsOn 'libsClean'
//    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}
